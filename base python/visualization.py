# Тулкит tkinter доступен в виде отдельного встроенного модуля, который содержит все необходимые графические компоненты
from tkinter import *
import random
# глобальная переменная, которая будет изменяться при нажатии на кнопку
clicks = 0
# Для создания графического окна применяется конструктор Tk(), который определен в модуле tkinter
root = Tk()
# заголовок
root.title("Графическая программа на Python")
# ширина/высота области окна, + сдвиг 300 пикселей вправо и на 250 вниз от верхнего левого угла экрана
root.geometry("400x300+300+250")

# кнопки
# Button (master, options) Параметр master представляет ссылку на родительский контейнер. btn = Button(root, text="Hello")
# Однако если в коде создается одно окно, то кнопка и любой другой элемент уже по умолчанию размещаются в этом окне.

# options представляет набор параметров, которые мы можем установить по их имени:
# activebackground: цвет кнопки, когда она находится в нажатом состоянии
# activeforeground: цвет текста кнопки, когда она в нажатом состоянии
# bd: толщина границы(по умолчанию 2)
# bg/background: фоновый цвет кнопки
# fg/foreground: цвет текста кнопки
# font: шрифт текста, например, font = "Arial 14" - шрифт Arial высотой 14px, или font = ("Verdana", 13, "bold") - шрифт Verdana высотой 13px с выделением жирным
# height: высота кнопки
# highlightcolor: цвет кнопки, когда она в фокусе
# image: изображение на кнопке
# justify: устанавливает выравнивание текста. Значение LEFT выравнивает текст по левому краю, CENTER - по центру, RIGHT - по правому краю
# padx: отступ от границ кнопки до ее текста справа и слева
# pady: отступ от границ кнопки до ее текста сверху и снизу
# relief: определяет тип границы, может принимать значения SUNKEN, RAISED, GROOVE, RIDGE
# state: устанавливает состояние кнопки, может принимать значения DISABLED, ACTIVE, NORMAL(по умолчанию)
# text: устанавливает текст кнопки
# textvariable: устанавливает привязку к элементу StringVar
# underline: указывает на номер символа в тексте кнопки, который подчеркивается. По умолчанию значение - 1, то есть никакой символ не подчеркивается
# width: ширина кнопки
# wraplength: при положительном значении строки текста будут переносится для вмещения в пространство кнопки

# Обработка нажатия на кнопку
# Для обработки нажатия на кнопку необходимо установить в конструкторе параметр command, присвоив ему ссылку на функцию, которая будет срабатывать при нажатии

# ф-я при клике увел глоб перем и отображает в титле значение


def click_button_title():
    global clicks
    clicks += 1
    root.title("Clicks {}".format(clicks))

# ф-я при клике увел глоб перем и меняет текст кнопки


def click_button_button():
    global clicks
    clicks += 1
    buttonText.set("Clicks {}".format(clicks))
# Метод config позволяет изменять не только текст, но и другие параметры кнопки или другого компонента
    rnd = str(hex(random.randint(1, 10000)))
    color = '#' + rnd
    btn_text.config(background=rnd, foreground="#fff")


# Для изменения текста мы можем использовать класс StringVar. Этот компонент позволяет создать привязку текста к строке.
# Он имеет два метода
# get(): возвращает строку из StringVar
# set(str): устанавливает строку в StringVar
# объявляем объект класса и задаем нач значение, для связи с кнопкой значение этого объекта присваивается параметру кнопки textvariable
# Аналогично для
# IntVar - Этот компонент позволяет создать привязку текста к целому числу
# BooleanVar - Этот компонент позволяет создать привязку текста к логическому выражению
# DoubleVar - Этот компонент позволяет создать привязку текста к дробному числу
buttonText = StringVar()
buttonText.set("Clicks {}".format(clicks))


# конструктор кнопки смены текста кнопки
btn_text = Button(textvariable=buttonText,
                  background="#444",
                  foreground="#bbb",
                  padx="10",
                  pady="12",
                  command=click_button_button)

# конструктор кнопки смены титула окна
btn = Button(text="Change Title",          # текст кнопки
             background="#555",     # фоновый цвет кнопки
             foreground="#ccc",     # цвет текста
             padx="20",             # отступ от границ до содержимого по горизонтали
             pady="8",              # отступ от границ до содержимого по вертикали
             font="16",             # высота шрифта
             command=click_button_title  # вызов функции при нажатии
             )
# делает кнопки видимыми
btn.pack()
btn_text.pack()
# отображение окна
root.mainloop()

# для замены иконки (перышка) в титле окна
# root.iconbitmap('icon.ico'),
# где 'icon.ico' - путь и название иконки, на которую хотите заменить
