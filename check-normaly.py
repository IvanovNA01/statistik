# пакет научных и инженерных библиотек, статистических и других методов(из пакета scipy класс stats)
import scipy.stats as st
# Предоставляет специальные структуры данных и операции для манипулирования числовыми таблицами и временными рядами
import matplotlib.pyplot as plt  # предназначена для создания научной графики
import numpy as np  # набор процедур для быстрых операций с массивами, включая математические, логические, манипуляции с формами, сортировку, выбор, ввод-вывод. ,
# дискретные преобразования Фурье, базовая линейная алгебра, базовые статистические операции, случайное моделирование и многое другое

""" # проверка на нормальность """

mean = 0  # Мат. ожидание

sd = 1    # Стандартное отклонение


# Построим график QQ-plot

# Генерация нормального распределения с мат.ожиданием 100, стандартным отклонением 50 и количеством элементов в выборке 1000
sample = np.random.normal(loc=mean, scale=sd, size=50)

plt.figure(figsize=[6.4*2, 4.8])  # Создаем фигуру qq_plot

plt.subplot(1, 2, 1)

# Создаем график QQ-plot при помощи функции по поиску квантелей значений нашего распределения
st.probplot(sample, dist="norm", plot=plt)

plt.title('QQ-plot / Квантиль-квантиль')  # Заголовок

plt.xlabel('Квантили Z-распределения')  # Подпись по оси X

plt.ylabel('Квантили фактического распределения')  # Подпись по оси Y

plt.grid(True)  # Включить сетку


# Построим гистограмму

plt.subplot(1, 2, 2)

n, bins, patches = plt.hist(sample, 5, density=True, facecolor='g',
                            alpha=0.75, label='Гистограмма')  # Cтроим гистограмму

plt.title('Гистограмма распределения')  # Заголовок

plt.xlabel('Промежутки наблюдений')  # Подпись по оси X

plt.ylabel('Плотность наблюдений')  # Подпись по оси Y

plt.text(-3, 0.35, r'$\mu=0,\ \sigma=1$')  # Текстовая подпись

plt.grid(True)  # Включить сетку


# Построим поверх гистограммы график Z-распределения

# Делаем массив значений Z-распределения
x = np.linspace(mean - 3*sd, mean + 3*sd, 1000)

plt.plot(x, st.norm.pdf(x, mean, sd), color='red',
         label='Z-распределение')  # Строим график Z-распределения


plt.legend()  # Показать легенду

plt.show()  # Показать фигуру

""" Критерий Шапиро-Уилка, работает хорошо, кроме случаев с большими выбросами - в этом случае "у-критерий-мана-уитни"
 """
